PlaceObj("XTemplate", {
  __is_kind_of = "XButton",
  group = "Zulu",
  id = "SubSubMenuButton",
  PlaceObj("XTemplateWindow", {
    "__class",
    "XButton",
    "HAlign",
    "center",
    "VAlign",
    "center",
    "MinWidth",
    300,
    "MaxWidth",
    300,
    "BorderColor",
    RGBA(0, 0, 0, 0),
    "Background",
    RGBA(255, 255, 255, 0),
    "BackgroundRectGlowColor",
    RGBA(0, 0, 0, 0),
    "FXPress",
    "MainMenuButtonClick",
    "FocusedBorderColor",
    RGBA(0, 0, 0, 0),
    "FocusedBackground",
    RGBA(255, 255, 255, 0),
    "DisabledBorderColor",
    RGBA(0, 0, 0, 0),
    "PressedBackground",
    RGBA(255, 255, 255, 0)
  }, {
    PlaceObj("XTemplateWindow", {
      "__condition",
      function(parent, context)
        return not GetDialog("PDADialog")
      end,
      "__class",
      "XBlurRect",
      "Margins",
      box(5, 5, 3, 5),
      "Dock",
      "box",
      "BlurRadius",
      10,
      "Mask",
      "UI/Common/mm_panel"
    }),
    PlaceObj("XTemplateWindow", {
      "__class",
      "XFrame",
      "Id",
      "idEffect",
      "Margins",
      box(5, 5, 5, 5),
      "Dock",
      "box",
      "Transparency",
      179,
      "HandleKeyboard",
      false,
      "Image",
      "UI/Common/screen_effect",
      "ImageScale",
      point(100000, 1000),
      "TileFrame",
      true,
      "SqueezeX",
      false,
      "SqueezeY",
      false
    }),
    PlaceObj("XTemplateWindow", {
      "__class",
      "XFrame",
      "UIEffectModifierId",
      "MainMenuMainBar",
      "Id",
      "idImg",
      "Dock",
      "box",
      "Transparency",
      64,
      "HandleKeyboard",
      false,
      "Image",
      "UI/Common/mm_panel",
      "FrameBox",
      box(50, 0, 50, 0),
      "SqueezeX",
      false,
      "SqueezeY",
      false
    }),
    PlaceObj("XTemplateWindow", {
      "__class",
      "XFrame",
      "UIEffectModifierId",
      "MainMenuHighlight",
      "Id",
      "idImgBcgr",
      "ZOrder",
      2,
      "Dock",
      "box",
      "Transparency",
      255,
      "HandleKeyboard",
      false,
      "Image",
      "UI/Common/mm_panel_selected",
      "FrameBox",
      box(50, 0, 50, 0),
      "SqueezeX",
      false,
      "SqueezeY",
      false
    }),
    PlaceObj("XTemplateFunc", {
      "name",
      "OnSetRollover(self, rollover)",
      "func",
      function(self, rollover)
        self.idBtnText:SetTextStyle(rollover and "MMOptionEntryHighlight" or "MMOptionEntry")
        if rollover then
          PlayFX("MainMenuButtonRollover")
          self.idImgBcgr:SetTransparency(0, 150)
        else
          self.idImgBcgr:SetTransparency(255, 150)
        end
      end
    }),
    PlaceObj("XTemplateFunc", {
      "name",
      "SetSelected(self, selected)",
      "func",
      function(self, selected)
        if selected then
          self:SetFocus(selected)
        end
      end
    }),
    PlaceObj("XTemplateWindow", {
      "Id",
      "idTxtContainer",
      "ZOrder",
      3,
      "Margins",
      box(10, 5, 10, 5),
      "Dock",
      "box",
      "HAlign",
      "center",
      "VAlign",
      "center",
      "LayoutMethod",
      "HList",
      "LayoutHSpacing",
      2,
      "UseClipBox",
      false,
      "BorderColor",
      RGBA(0, 0, 0, 0),
      "BackgroundRectGlowColor",
      RGBA(0, 0, 0, 0),
      "HandleKeyboard",
      false,
      "HandleMouse",
      true
    }, {
      PlaceObj("XTemplateWindow", {
        "comment",
        "text on button",
        "__class",
        "AutoFitText",
        "Id",
        "idBtnText",
        "ZOrder",
        3,
        "Margins",
        box(3, 0, 3, 0),
        "Dock",
        "box",
        "VAlign",
        "center",
        "Clip",
        false,
        "BorderColor",
        RGBA(0, 0, 0, 0),
        "BackgroundRectGlowColor",
        RGBA(0, 0, 0, 0),
        "HandleKeyboard",
        false,
        "FocusedBorderColor",
        RGBA(0, 0, 0, 0),
        "DisabledBorderColor",
        RGBA(0, 0, 0, 0),
        "TextStyle",
        "MMOptionEntry",
        "Translate",
        true
      })
    })
  })
})
